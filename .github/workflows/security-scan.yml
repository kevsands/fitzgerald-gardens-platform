name: Security Scan

on:
  push:
    branches: [ main, master, dev, develop, staging ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run security scan every day at 2 AM
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read
  security-events: write

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        env:
          NODE_ENV: development

      - name: Verify package-lock integrity
        run: npm run verify-lockfile

      - name: Generate SBOM
        run: npm run generate-sbom

      - name: Run SBOM validation
        run: npm run validate-sbom
      
      - name: Check for suspicious packages
        run: npm run postinstall
        continue-on-error: true

      - name: Run security linting
        run: npm run security-check
      
      - name: Run dependency scanning
        run: npm run dependency-scan
        continue-on-error: true

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          languages: javascript, typescript
          queries: security-extended
          
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Upload security results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
        continue-on-error: true

  container-scanning:
    name: Container Scanning
    runs-on: ubuntu-latest
    if: ${{ hashFiles('Dockerfile') != '' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'